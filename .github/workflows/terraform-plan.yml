name: Terraform Init, Plan & Apply (Changed Directories Only)

on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  terraform-init-plan:
    name: Terraform - Init & Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Find changed Terraform directories
        id: find_dirs
        run: |
          echo "Searching for changed directories with .tf files..."
          base_ref=$(git rev-parse HEAD^ || echo "")
          if [ -z "$base_ref" ]; then
            echo "First commit, scanning all .tf directories"
            find . -type f -name "*.tf" -exec dirname {} \; | sort -u > tf_dirs.txt
          else
            git diff --name-only $base_ref HEAD | grep '\.tf$' | xargs -r -n1 dirname | sort -u > tf_dirs.txt
          fi
          echo "Terraform directories to process:"
          cat tf_dirs.txt || echo "None"

      - name: Terraform Init
        run: |
          if [ ! -s tf_dirs.txt ]; then
            echo "No changed Terraform directories found. Skipping init."
            exit 0
          fi
          while read dir; do
            echo "Running terraform init in $dir"
            cd "$dir"
            terraform init -input=false
            cd - > /dev/null
          done < tf_dirs.txt

      - name: Terraform Plan
        run: |
          if [ ! -s tf_dirs.txt ]; then
            echo "No changed Terraform directories found. Skipping plan."
            exit 0
          fi
          while read dir; do
            echo "Running terraform plan in $dir"
            cd "$dir"
            terraform plan -input=false || echo "Terraform plan failed in $dir"
            cd - > /dev/null
          done < tf_dirs.txt

      - name: Upload changed directories file
        uses: actions/upload-artifact@v4
        with:
          name: tf-dirs
          path: tf_dirs.txt

  manual-approval:
    name: Manual Approval
    needs: terraform-init-plan
    runs-on: ubuntu-latest
    steps:
      - uses: trstringer/manual-approval@v1
        with:
            secret: ${{ github.TOKEN}}
            approver: SivaKumarKonduru
            minimum-approvals: 1
            exclude-workflow-initiator-as-approver: false        

  terraform-apply:
    name: Terraform Apply (Requires Approval)
    needs: terraform-init-plan
    runs-on: ubuntu-latest
    environment:
      name: terraform-prod
    concurrency:
      group: terraform-apply
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Download changed directories file
        uses: actions/download-artifact@v4
        with:
          name: tf-dirs

      - name: Terraform Apply (Manual Approval via Environment)
        run: |
          if [ ! -s tf_dirs.txt ]; then
            echo "No changed Terraform directories found. Skipping apply."
            exit 0
          fi
          while read dir; do
            echo "Running terraform init and apply in $dir"
            cd "$dir"
            terraform init -input=false
            terraform apply -auto-approve || echo "Terraform apply failed in $dir"
            cd - > /dev/null
          done < tf_dirs.txt
